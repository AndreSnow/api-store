APP_NAME=api-store
APP_ENV=local
APP_KEY=base64:ySGmwUs4x/GEDtkuLvh7GzlHdfYKMvfg7EHUJdAn8AU=
APP_DEBUG=true
APP_URL=http://localhost

LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# docker
# DB_CONNECTION=mysql
# DB_HOST=127.0.0.1
# DB_PORT=3308 # não mude para 3306, pois vai conflitar
# DB_DATABASE=banco_local
# DB_USERNAME=root
# DB_PASSWORD=1234

testes
DB_CONNECTION=sqlite
DB_HOST=database/database.sqlite

# padrão
# DB_CONNECTION=mysql
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=store
# DB_USERNAME=root
# DB_PASSWORD=

BROADCAST_DRIVER=log
CACHE_DRIVER=redis
CACHE_TIME=27800 # 8 horas
FILESYSTEM_DISK=local
QUEUE_CONNECTION=rabbitmq
SESSION_DRIVER=redis
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

# os caches estão pelo container redis, mas já está previamente configurado
# REDIS_HOST=127.0.0.1
REDIS_CLIENT=predis
REDIS_HOST=microservice-email-redis
REDIS_PASSWORD=1234
REDIS_PORT=6379

# basta ter uma conta gmail para usar o envio de emails ou em https://mailtrap.io/inboxes 
MAIL_MAILER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=
MAIL_PASSWORD=
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS="solluti@company.com"
MAIL_FROM_NAME="${APP_NAME}"

# email gerado pelo https://www.invertexto.com/gerador-email-temporario
EMAIL_MANAGER="aiyun6285@uorak.com"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=mt1

VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_HOST="${PUSHER_HOST}"
VITE_PUSHER_PORT="${PUSHER_PORT}"
VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

# basta ter uma conta em https://customer.cloudamqp.com/instance para usar o RabbitMQ e criar uma instância
RABBITMQ_QUEUE=queue_micro_mail
RABBITMQ_HOST=
RABBITMQ_PORT=5672
RABBITMQ_USER=
RABBITMQ_PASSWORD=
RABBITMQ_VHOST=
RABBITMQ_WORKER=default